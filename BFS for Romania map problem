from collections import deque

def bfs(graph, start, goal):
    queue, visited = deque([start]), set()
    while queue:
        vertex = queue.popleft()
        if vertex == goal:
            print(vertex)
            return
        if vertex not in visited:
            print(vertex)
            visited.add(vertex)
            queue.extend(neighbor for neighbor in graph[vertex] if neighbor not in visited)

# Example usage
graph = {
    'A': ['Z', 'S', 'T'],
    'B': ['U', 'P', 'G', 'F'],
    'C': ['D', 'R', 'P'],
    'D': ['M'],
    'E': ['H'],
    'I': ['V', 'N'],
    'L': ['T', 'M'],
    'O': ['Z', 'S'],
    'P': ['R'],
    'U': ['V'],
    'G': ['B'],
    'N': ['I'],
    'V': ['I', 'U'],
    'Z': ['O', 'A'],
    'S': ['O', 'A', 'R', 'F'],
    'T': ['A', 'L'],
    'M': ['L', 'D'],
    'R': ['S', 'P', 'C'],
    'F': ['S', 'B']
}
bfs(graph, 'A', 'B')
